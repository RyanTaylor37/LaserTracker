import threading
import runner
import time
import logging

# MotorLogger class logs motor controls generated by MotorControl class 
class MotorLogger(threading.Thread):

    def __init__(self, group=None, target=None, name=None, args=(), kwargs=None, *, daemon=None):
        super().__init__(group=group, target=target, name=name, daemon=daemon)
        print("Created MotorLogger")


    # run loop that logs lSpeed and rSpeed which sets motor Controls 
    def run(self):
        while runner.Runner.initialPath:
            runner.Runner.lock2.acquire()
            runner.Runner.log.append((time.time(), runner.Runner.lSpeed, runner.Runner.rSpeed))
            #print("Motor Speeds: ", runner.Runner.lSpeed, runner.Runner.rSpeed)
            #time.sleep(1) #TODO: REMOVE THIS
            runner.Runner.lock2.release()
            time.sleep(0.005)
        runner.Runner.log.append((time.time(), runner.Runner.lSpeed, runner.Runner.rSpeed))
